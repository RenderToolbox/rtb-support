#! /bin/bash

# automatically quit after errors
set -e

echo "Hello."
date


# given or default environment
: ${INSTANCE_NAME:="test-instance"}
: ${COMMAND:="ls -al"}
: ${AMI_ID:="ami-ae68bace"}
: ${AWS_USER:="ubuntu"}
: ${DISK_GB:=""}
: ${INSTANCE_TYPE:="m3.large"}
: ${IAM_PROFILE:="Name=ecsInstanceRole"}
: ${SECURITY_GROUPS:="default" "all-ssh"}
: ${KEY_NAME:=""}
: ${KEY_FOLDER:="$HOME/aws"}
: ${TERMINATE:="yes"}

INSTANCE_DETAILS="/tmp/$INSTANCE_NAME.json"


# spin up a new instances
echo "Requesting <$INSTANCE_TYPE> for <$AMI_ID>."
RUN_COMMAND="aws ec2 run-instances --image-id $AMI_ID --count 1 --instance-type $INSTANCE_TYPE --iam-instance-profile $IAM_PROFILE --security-groups $SECURITY_GROUPS"

if [[ -n $KEY_NAME ]]
then
  RUN_COMMAND="$RUN_COMMAND --key-name $KEY_NAME"
fi

if [[ -n $DISK_GB ]]
then
  RUN_COMMAND="$RUN_COMMAND --block-device-mappings "[{\"DeviceName\":\"/dev/sda1\",\"Ebs\":{\"VolumeSize\":$DISK_GB,\"DeleteOnTermination\":true,\"VolumeType\":\"gp2\"}}]""
fi

"$RUN_COMMAND" > "$INSTANCE_DETAILS"

INSTANCE_ID=`jq -r ".Instances[0].InstanceId" $INSTANCE_DETAILS`


# tag the instance for fun
aws ec2 create-tags --resources $INSTANCE_ID --tags Key=Name,Value=$INSTANCE_NAME Key=Script,Value=run-render-instance


# wait until it's ready for ssh
echo "Waiting for instance <$INSTANCE_ID> to start..."
aws ec2 wait instance-status-ok --instance-ids "$INSTANCE_ID"
echo "...OK"
date


# update instance details
aws ec2 describe-instances \
  --instance-id $INSTANCE_ID \
  > "$INSTANCE_DETAILS"

INSTANCE_DNS_NAME=`jq -r ".Reservations[0].Instances[0].PublicDnsName" $INSTANCE_DETAILS`


# fire off the command with or without identity file
if [[ -z $KEY_NAME ]]
then
  echo "Running command <$COMMAND> at host <$INSTANCE_DNS_NAME> with identity <$KEY_NAME>"
  ssh-keyscan -H $INSTANCE_DNS_NAME >> ~/.ssh/known_hosts
  ssh -i "$KEY_FOLDER/$KEY_NAME.pem" "$AWS_USER@$INSTANCE_DNS_NAME" "$COMMAND"
else
  echo "Running command <$COMMAND> at host <$INSTANCE_DNS_NAME with no identity>"
  ssh "$AWS_USER@$INSTANCE_DNS_NAME" "$COMMAND"
fi


echo "Done"
date


# shut down the instance?
if [ "yes" == $TERMINATE ];
then
  echo "Terminating instance <$INSTANCE_ID>..."
  aws ec2 terminate-instances \
    --instance-ids "$INSTANCE_ID" \
    >> "$INSTANCE_DETAILS"
  aws ec2 wait instance-terminated --instance-ids "$INSTANCE_ID"
  echo "...OK"
else
  echo "Leaving instance running <$INSTANCE_ID>.  Try:"
  echo "  ssh -i $KEY_FOLDER/$KEY_NAME.pem $AWS_USER@$INSTANCE_DNS_NAME"
fi


echo "Bye-bye."
date

