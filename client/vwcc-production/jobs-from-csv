#! /bin/bash

CSV="$1"
GO="$2"

if [[ -z $CSV || ! -f $CSV ]];
then
  echo "csv file <$CSV> not found."
  exit 1
fi

mkdir -p ~/rtb-logs

while IFS="," read JOB_NUMBER LUMINANCE_LEVELS REFLECTANCE_NUMBERS REFLECTANCE_START REFLECTANCE_END BUCKET_PATH
do
  if [[ "$JOB_NUMBER" =~ [[:alpha:]] ]];
  then
    continue
  fi

  CLEAN_BUCKET_PATH=${BUCKET_PATH//[$'\t\r\n ,']}

  export INSTANCE_NAME="vwcc-1000-job-$JOB_NUMBER" 
  export INSTANCE_TYPE="m4.2xlarge"
  export COMMAND="docker run \
    --rm \
    -v \"/usr/local/MATLAB/R2015b\":/usr/local/MATLAB/from-host \
    -v /home/ubuntu:/home/ubuntu \
    -v /var/run/docker.sock:/var/run/docker.sock \
    --net=\"host\" \
    -e \"STARTUP=/home/ubuntu/MATLAB/startup\" \
    -e \"TOOLBOXES={'VirtualWorldColorConstancy', 'isetbio'}\" \
    -e \"COMMAND=RunToyVirtualWorldRecipes('luminanceLevels', $LUMINANCE_LEVELS, 'reflectanceNumbers', $REFLECTANCE_NUMBERS, 'executeWidth', 640, 'executeHeight', 480, 'analyzeWidth', 640, 'analyzeHeight', 480, 'analyzeCropImageHalfSize', 50, 'mosaicHalfSize', 50)\" \
    -e \"OUTPUT_SCRATCH=/home/ubuntu/render-toolbox-working\" \
    -e \"OUTPUT_BUCKET=s3://$CLEAN_BUCKET_PATH\" \
    ninjaben/rtb-support"

  if [[ "$GO" == "go" ]];
  then
    ./run-render-instance 2>&1 > ~/rtb-logs/$INSTANCE_NAME.log &
    sleep 1
  else
    echo "INSTANCE_NAME $INSTANCE_NAME"
    echo "COMMAND $COMMAND"
    echo "WOULD RUN ./run-render-instance 2>&1 > ~/rtb-logs/$INSTANCE_NAME.log &"
    echo
  fi

done < $CSV

